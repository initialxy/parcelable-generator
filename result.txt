
    /**************************************************************************
     * Code to make this class Parcelable. Generated by ParcelableGen.py
     */

    public static final Parcelable.Creator<Profile> CREATOR = new Creator();

    /**
     * Default constructor, needed for Jackson. Remove if necessary.
     */
    public Profile() {
    }

    /**
     * Reconstruct from Parcel
     */
    public Profile(Parcel in) {
        id = in.readString();
        loyaltyNumber = in.readString();
        loyaltyTier = in.readString();
        email = in.readString();
        Boolean = in.readParcelable(receiveReceiptEmail.class.getClassLoader());
        Boolean = in.readParcelable(receiveMemberEmail.class.getClassLoader());
        boolean[] testArray = new boolean[1];
        in.readBooleanArray(testArray);
        test = testArray[0];
        homePhoneNumber = in.readString();
        businessPhoneNumber = in.readString();
        faxPhoneNumber = in.readString();
        CorporateAccount = in.readParcelable(corporateAccount.class.getClassLoader());
        Driver = in.readParcelable(driver.class.getClassLoader());
        Address = in.readParcelable(address.class.getClassLoader());
        creditCards = new ArrayList<CreditCard>();
        in.readList(creditCards, CreditCard.class.getClassLoader());
        RentalPreferences = in.readParcelable(rentalPreferences.class.getClassLoader());
        RewardPreferences = in.readParcelable(rewardPreferences.class.getClassLoader());
        OutOfDate = in.readParcelable(outOfDate.class.getClassLoader());
        String someEnumStr = in.readString();
        if (someEnumStr != null) {
            someEnum = TestType.valueOf(someEnumStr);
        } else {
            someEnum = null;
        }
        String calendar1TimeZoneStr = in.readString();
        if (calendar1TimeZoneStr != null) {
            calendar1 = Calendar.getInstance();
            calendar1.setTimeZone(TimeZone.getTimeZone(calendar1TimeZoneStr));
            calendar1.setTimeInMillis(in.readLong());
        } else {
            calendar1 = null;
        }
        String calendar2TimeZoneStr = in.readString();
        if (calendar2TimeZoneStr != null) {
            calendar2 = new GregorianCalendar(TimeZone.getTimeZone(calendar2TimeZoneStr));
            calendar2.setTimeInMillis(in.readLong());
        } else {
            calendar2 = null;
        }
        try {
            calendar3 = javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar(in.readString());
        } catch (DatatypeConfigurationException dce) {}
    }

    @Override
    public void writeToParcel(Parcel out, int flags) {
        out.writeString(id);
        out.writeString(loyaltyNumber);
        out.writeString(loyaltyTier);
        out.writeString(email);
        out.writeParcelable(receiveReceiptEmail, 0);
        out.writeParcelable(receiveMemberEmail, 0);
        out.writeBooleanArray(new boolean[] { test });
        out.writeString(homePhoneNumber);
        out.writeString(businessPhoneNumber);
        out.writeString(faxPhoneNumber);
        out.writeParcelable(corporateAccount, 0);
        out.writeParcelable(driver, 0);
        out.writeParcelable(address, 0);
        out.writeList(creditCards);
        out.writeParcelable(rentalPreferences, 0);
        out.writeParcelable(rewardPreferences, 0);
        out.writeParcelable(outOfDate, 0);
        if (someEnum != null) {
            out.writeString(someEnum.name());
        } else {
            out.writeString(null);
        }
        if (calendar1 != null) {
            out.writeString(calendar1.getTimeZone().getID());
            out.writeLong(calendar1.getTimeInMillis());
        } else {
            out.writeString(null);
        }
        if (calendar2 != null) {
            out.writeString(calendar2.getTimeZone().getID());
            out.writeLong(calendar2.getTimeInMillis());
        } else {
            out.writeString(null);
        }
        out.writeString(calendar3.toString());
    }

    @Override
    public int describeContents() {
        return 0;
    }

    private static class Creator implements Parcelable.Creator<Profile> {
        public Profile createFromParcel(Parcel source) {
            return new {className}(source);
        }

        public Profile[] newArray(int size) {
            return new {className}[size];
        }
    }

    /**************************************************************************
     * Parcelable codes end
     */
    
